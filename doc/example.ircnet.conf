/* Include this if you want to see ircnet-like service &channels */
.include "sch.conf"

serverinfo {
	name = "testnet.yournick";

	/* make sure this is unique */
	sid = "92XY";

	description = "!ratbox IRCNet server";

	network_name = "IRCNet";
	network_desc = "Quack!";

	hub = yes;

	/* if you want to bind specific iface */
	#vhost = "192.169.0.1";
	#vhost6 = "3ffe:80e8:546::2";
        # vhost_dns = "192.169.0.2";
        # vhost_dns6 = "3ffe:80e8:546::3";
	default_max_clients = 10000;

        ssl_private_key = "etc/test.key";
        ssl_cert = "etc/test.cert";
        ssl_dh_params = "etc/dh.pem";

	ssld_count = 1;
	bandb = "etc/ban.db";
};

admin {
	name = "IRC Admin";
	description = "Main Server Administrator";
	email = "<irc-admin@irc.irc>";
};

/* log {}: contains information about logfiles. */
log {
	fname_userlog = "logs/userlog";
	fname_fuserlog = "logs/fuserlog";
	fname_operlog = "logs/operlog";
	fname_foperlog = "logs/foperlog";
	fname_serverlog = "logs/serverlog";
	fname_glinelog = "logs/glinelog";
	fname_klinelog = "logs/klinelog";
	fname_killlog = "logs/killlog";
	fname_operspylog = "logs/operspylog";
	fname_ioerrorlog = "logs/ioerror";
};

/* class {}: contain information about classes for users (OLD Y:) */
class "users" {
	ping_time = 5 minutes;
        number_per_ident = 2;
	number_per_ip = 3;
        number_per_ip_global = 5;
	cidr_ipv4_bitlen = 24;
	cidr_ipv6_bitlen = 64;
	number_per_cidr = 4;
	max_number = 100;
	sendq = 100 kbytes;
};

class "server" {
	ping_time = 5 minutes;
	connectfreq = 1 minutes;
	max_number = 1;
	sendq = 64 megabytes;
};

listen {
	aftype = ipv4;
	port = 6660..6669;

	aftype = ipv6;
	port = 6660..6669;

	aftype = ipv4;
        sslport = 6697, 7000;

	aftype = ipv6;
        sslport = 6697, 7000;
};

auth {
	user = "*@*";
	class = "users";
};

operator "yournick" {
	user = "*@127.0.0.1";
	password = "yourpassword";

	/* privileges: controls the activities and commands an oper is
	 * allowed to do on the server.  You may prefix an option with ~ to
	 * disable it, ie ~operwall
	 *
	 * Default flags are operwall, remoteban and encrypted.
	 *
	 * Available options:
	 *
	 * encrypted:    the password above is encrypted [DEFAULT]
	 * local_kill:   allows local users to be /KILL'd
	 * global_kill:  allows local and remote users to be 
	 *               /KILL'd                           (OLD 'O' flag)
	 * remote:       allows remote SQUIT and CONNECT   (OLD 'R' flag)
	 * kline:        allows KILL, KLINE and DLINE      (OLD 'K' flag)
	 * unkline:      allows UNKLINE and UNDLINE        (OLD 'U' flag)
	 * gline:        allows GLINE                      (OLD 'G' flag)
	 * nick_changes: allows oper to see nickchanges    (OLD 'N' flag)
	 *               via usermode +n
	 * rehash:       allows oper to REHASH config      (OLD 'H' flag)
	 * die:          allows DIE and RESTART            (OLD 'D' flag)
	 * admin:        gives admin privileges.  admins
	 *               may (un)load modules and see the
	 *               real IPs of servers.
	 * hidden_admin: gives admin privileges except
	 *		 will not have the admin lines in
	 *		 stats p and whois.
	 * xline:	 allows use of /quote xline/unxline
	 * resv:	 allows use of /quote resv/unresv
	 * operwall:     allows the oper to send operwalls [DEFAULT]
	 * oper_spy:	 allows 'operspy' features to see through +s
	 * 		 channels etc. see /quote help operspy
	 * hidden_oper:  hides the oper from /stats p    (OLD UMODE +p)	
	 * remoteban:    allows remote kline etc [DEFAULT]
	 * need_ssl:     oper must be connected via SSL/TLS to oper up
	 *               
         */
	flags = remoteban, global_kill, remote, kline, unkline, gline,
		die, rehash, admin, xline, resv, operwall, ~encrypted;
};

/* connect {}: controls servers we connect to (OLD C:, N:, H:, L:) */
connect "irc.not-ratbox.org" {
	mask = "*.yournick";
	host = "77.78.111.10";
	send_password = "secret";
	accept_password = "secret";
	port = 6667;
	hub_mask = "*";
	class = "server";
	flags = compressed, topicburst, ~encrypted, autoconn;
};

/* leaf connections should be kept behind the mask */
connect "leaf.yournick" {
	host = "1.3.3.7";
	send_password = "secret";
	accept_password = "secret";
	port = 6667;
	leaf_mask = "*.yournick";
	class = "server";
	flags = compressed, topicburst, ~encrypted, autoconn;
};


cluster {
	name = "*.yournick";
	flags = all;
};

shared {
	oper = "*@*";
	flags = all;
};

/* The channel block contains options pertaining to channels */
channel {
	/* 2.11 will allow non-ops */
	invite_ops_only = yes;
	max_chans_per_user = 25;
        max_bans = 100;

	default_split_user_count = 60000;
	default_split_server_count = 40;

	/* avoid people joining empty channels when in splitmode
	   as to avoid abusing splits to override +iblk.
	no_create_on_split = yes;

	/* adds ~1M to the burst */
	burst_topicwho = yes;
};


/* The serverhide block contains the options regarding serverhiding */
serverhide {
	/* flatten links: this option will show all servers in /links appear
	 * that they are linked to this current server.
         * /map s will be disabled for users
	 */
	flatten_links = no;

	/* links delay: how often to update the links file when it is
	 * flattened.
	 */
	links_delay = 5 minutes;

	/*
	 * do not announce our real server name across a mask
	 */
        hidden = no;

	/*
	 * show servers with hidden = yes in /links output and allow /map s
	 */
	disable_hidden = yes;
};

general {
	default_invisible = no;
	/* dots in ident: the amount of '.' characters permitted in an ident
	 * reply before the user is rejected.
	 */
	dots_in_ident = 2;
        
        /* min nonwildcard: the minimum non wildcard characters in k/d/g lines
	 * placed via the server.  klines hand placed are exempt from limits.
	 * wildcard chars: '.' '*' '?' '@'
	 */
	min_nonwildcard = 3;

	/* min nonwildcard simple: the minimum non wildcard characters in
	 * xlines/resvs placed via the server.
	 * wildcard chars: '*' '?'
	 */
	min_nonwildcard_simple = 3;

	/* nick flood: enable the nickflood control code */
	anti_nick_flood = yes;

	/* nick flood: the nick changes allowed in the specified period */
	max_nick_time = 20 seconds;
	max_nick_changes = 5;

        /* anti spam time: the minimum time a user must be connected before
	 * custom quit messages are allowed.
	 */
        anti_spam_exit_message_time = 5 minutes;

	/* client exit: prepend a users quit message with "Client exit: " */
	client_exit = yes;

	/* warn no nline: warn opers about servers that try to connect but
	 * we dont have a connect {} block for.  Twits with misconfigured 
	 * servers can get really annoying with this enabled.
	 */
	warn_no_nline = yes;

	/* stats e disabled: disable stats e.  useful if server ips are
	 * exempted and you dont want them listing on irc.
	 */
	stats_e_disabled = no;

	/* stats c oper only: make stats c (connect {}) oper only */
	stats_c_oper_only = no;

	/* stats o oper only: make stats o (opers) oper only */
	stats_o_oper_only = no;

	/* stats i oper only: make stats i (auth {}) oper only. set to:
	 *     yes:    show users no auth blocks, made oper only.
	 *     masked: show users first matching auth block
	 *     no:     show users all auth blocks.
	 */
	stats_i_oper_only = masked;

	/* stats k/K oper only: make stats k/K (klines) oper only.  set to:
	 *     yes:    show users no auth blocks, made oper only
	 *     masked: show users first matching auth block
	 *     no:     show users all auth blocks.
	 */
	stats_k_oper_only = masked;

        /* map oper only: make /map oper only */
        map_oper_only = no;

	/* pace wait simple: time between use of less intensive commands
	 * (HELP, remote WHOIS, WHOWAS)
	 */
	pace_wait_simple = 1 second;

	/* pace wait: time between more intensive commands
	 * (ADMIN, INFO, LIST, LUSERS, MOTD, STATS, VERSION)
	 */
	pace_wait = 1 seconds;

	short_motd = no;

	ping_cookie = yes;

	/* connect timeout: sets how long we should wait for a connection
	 * request to succeed
	 */
	connect_timeout = 60 seconds;

	/* disable auth: disables identd checking */
	disable_auth = no;

	/* no oper flood: increase flood limits for opers. */
	no_oper_flood = yes;

	/* glines: enable glines, network wide temp klines */
	/*
	 * Voted glines, opt-in.
	 */
	glines = yes;

	/* gline time: the amount of time a gline will remain before expiring */
	gline_time = 1 day;

	/* gline_min_cidr: If using a CIDR gline, the minimum length the
	 * mask must be
	 */
	gline_min_cidr = 16;

	
	/* global_cidr_ipv4_bitlen:  limits numbers of connections from a subnet size globally 
 	 * global_cidr_ipv4_count: number of connections allowed from a given subnet
   	 * global_cidr_ipv6_bitlen and global_cidr_ipv6_count are the same as above but for ipv6
	 * 
	 * global_cidr: if set to no, do not process limits
	 *
 	 * The reason these are not in classes is that remote clients do not get assigned classes
 	 * Also this needs TS6 across the entire network to work in a reliable way
  	 */
	global_cidr_ipv4_bitlen = 24;
	global_cidr_ipv4_count = 128;

	global_cidr_ipv6_bitlen = 64;
	global_cidr_ipv6_count = 128;
	global_cidr = yes;

	/* REMOVE ME.  The following line checks you've been reading. */
	havent_read_conf = yes;

	/* client flood: maximum number of lines in a clients queue before
	 * they are dropped for flooding.
	 */
	client_flood = 50;

        /* use_whois_actually: send clients requesting a whois a numeric
         * giving the real IP of non-spoofed clients to prevent DNS abuse.
         */
        use_whois_actually = yes;

	/* usermodes configurable: a list of usermodes for the options below
	 *
	 * +b - bots       - See bot and drone flooding notices
	 * +c - cconn      - Client connection/quit notices
	 * +C - cconnext   - Extended client connection/quit notices
	 * +d - debug      - See debugging notices
	 * +f - full       - See I: line full notices
	 * +g - callerid   - Server Side Ignore
	 * +i - invisible  - Not shown in NAMES or WHO unless you share a 
	 *                   a channel
	 * +k - skill      - See server generated KILL messages
	 * +l - locops     - See LOCOPS messages
	 * +n - nchange    - See client nick changes
	 * +r - rej        - See rejected client notices
	 * +s - servnotice - See general server notices
	 * +u - unauth     - See unauthorised client notices
	 * +w - wallop     - See server generated WALLOPS
	 * +x - external   - See remote server connection and split notices
	 * +y - spy        - See LINKS, STATS, TRACE notices etc.
	 * +z - operwall   - See oper generated WALLOPS
	 * +Z - operspy	   - See operspy notices
	 */

	/* oper only umodes: usermodes only opers may set */
	oper_only_umodes = bots, cconn, debug, full, skill, nchange, 
                     rej, spy, external, operwall, locops, unauth;

	/* oper umodes: default usermodes opers get when they /oper */
	oper_umodes = locops, servnotice, operwall, wallop;

	/* use egd: if your system does not have *random devices yet you
	 * want to use OpenSSL and encrypted links, enable this.  Beware -
	 * EGD is *very* CPU intensive when gathering data for its pool
	 */
	#use_egd = yes;

	/* egdpool path: path to EGD pool. Not necessary for OpenSSL >= 0.9.7
	 * which automatically finds the path.
	 */
	#egdpool_path = "/var/run/egd-pool";


	/* compression level: level of compression for compressed links between
	 * servers.  
	 *
	 * values are between: 1 (least compression, fastest)
	 *                and: 9 (most compression, slowest).
	 */
	#compression_level = 6;

        /* burst_away: This enables bursting away messages to servers.
         * With this disabled, we will only propogate AWAY messages
         * as users send them, but never burst them.  Be warned though
         * enabling this could increase the size of a burst significantly.
	 * (should be ok to enable on strictly leaf servers).
         */
        burst_away = no;

	/* reject duration: the amount of time to cache the rejection */
	reject_duration = 5 minutes;

	/* reject_after_count: the number of times within reject_duration time that 
	 * an IP will start being rejected.
	 */
	reject_after_count = 3;

	/* throttle_duration: Amount of time that throttling will be applied to an IP
	 * address.
	 */
	throttle_duration = 10;

	/* throttle_count: Number of connections within throttle_duration that it takes
	 * for throttling to take effect */
	throttle_count = 3;
};
